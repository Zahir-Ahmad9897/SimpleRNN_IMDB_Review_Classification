# -*- coding: utf-8 -*-
"""RNN_app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1QgDDk6iMJU05-VloxRSjkXupmlku_KBR
"""

# Commented out IPython magic to ensure Python compatibility.
# %%writefile RNN_app.py
# import streamlit as st
# import numpy as np
# import tensorflow as tf
# from tensorflow.keras.datasets import imdb
# from tensorflow.keras.models import load_model
# from tensorflow.keras.preprocessing import sequence
# 
# # Load IMDB word index and reverse it
# word_index = imdb.get_word_index()
# reversed_word_index = {value: key for key, value in word_index.items()}
# 
# # Load pre-trained model (adjust path if needed)
# model = load_model('/content/drive/MyDrive/RNN_projects/Simple_RNN_IMDB.h5')
# 
# # Max length for padding
# max_len = 500
# 
# # Function to preprocess input text
# def preprocess_text(text):
#     words = text.lower().split()
#     encoded_review = [word_index.get(word, 2) + 3 for word in words]
#     padded_review = sequence.pad_sequences([encoded_review], maxlen=max_len)
#     return padded_review
# 
# # Function to predict sentiment
# def predict_sentiment(review):
#     processed_input = preprocess_text(review)
#     prediction = model.predict(processed_input)
#     sentiment = "Positive" if prediction[0][0] > 0.5 else "Negative"
#     return sentiment, prediction[0][0]
# 
# # Streamlit UI
# st.title("ðŸŽ¬ Movie Review Sentiment Analyzer")
# st.subheader("Enter your review below:")
# 
# user_input = st.text_area("Your Review")
# 
# if st.button("Classify"):
#     if user_input.strip() == "":
#         st.warning("Please enter a review first.")
#     else:
#         sentiment, score = predict_sentiment(user_input)
#         st.markdown(f"**Sentiment:** {sentiment}")
#         st.markdown(f"**Confidence Score:** {score:.4f}")
#

!pip install streamlit
!npm install -g localtunnel

from google.colab import drive
drive.mount('/content/drive', force_remount=True)

!wget -q -O - ipv4.icanhazip.com

!streamlit run RNN_app.py & npx localtunnel --port 8501